
# coding: utf-8

## Le scandale 3/4G : une influence sur la politique cadeaux des labos spécialisés ?

# In[1]:

#ces parties représente le code utilisé pour réaliser l'exploitation ci dessous
import sys
import pandas as pd
import numpy as np
import json


### Exploitation des données de BAYER

# In[68]:

#Chargement des données
labo = pd.read_csv("BAYER.anon.csv", encoding='utf-8')
labo = labo[labo.DECL_AVANT_DATE != 'None']
labo = labo.dropna(subset = ['DECL_AVANT_DATE'])
labo = labo[labo.DECL_AVANT_DATE.str.contains(r'^20\d\d-')]
avantages = labo[['DECL_AVANT_DATE','DECL_AVANT_MONTANT', 'BENEF_PS_QUALIFICATION', 'ORIGIN']]
avantages.index = pd.to_datetime(avantages['DECL_AVANT_DATE'])


#### Nombre des avantages en forte augmentation début 2013

# In[69]:

avantages['DECL_AVANT_MONTANT'].resample('BQ', how='count').plot()


#### Les montants sont en revanche moins que mi 2012

# In[78]:

avantages['DECL_AVANT_MONTANT'].resample('BQ', how='sum').plot()


# En période de crise, il est logique que des contacts soient établis (et des petits cadeaux commes de repas organisés) que des cadeaux à plusieurs milliers d'euros comme en 2012)

#### Les populations visées durant la période janvier 2013 à juillet 2013

# In[101]:

avantages[(avantages.index > '2013-01-01') & (avantages.index < '2013-07-01')].groupby(['ORIGIN', 'BENEF_PS_QUALIFICATION'])[['ORIGIN']].count().sort('ORIGIN', ascending=False)


#### Les gynécologues recoivent peu de cadeaux de BAYER pendant cette période

# In[102]:

avantages[avantages.BENEF_PS_QUALIFICATION == u'Gynécologie']['DECL_AVANT_MONTANT'].resample('BQ', how='count').plot()


#### Les médecins généralistes plutot visés fin 2014

# In[74]:

avantages[avantages.BENEF_PS_QUALIFICATION == u'Médecine générale']['DECL_AVANT_MONTANT'].resample('BQ', how='count').plot()


### Données Effik

# In[119]:

#Chargement des données
labo = pd.read_csv("EFFIK.anon.csv", encoding='utf-8')
labo = labo[labo.DECL_AVANT_DATE != 'None']
labo = labo.dropna(subset = ['DECL_AVANT_DATE'])
labo = labo[labo.DECL_AVANT_DATE.str.contains(r'^20\d\d-')]
avantages = labo[['DECL_AVANT_DATE','DECL_AVANT_MONTANT', 'BENEF_PS_QUALIFICATION', 'ORIGIN']]
avantages.index = pd.to_datetime(avantages['DECL_AVANT_DATE'])


#### Pas plus de cadeaux début 2013

# In[120]:

avantages['DECL_AVANT_MONTANT'].resample('BQ', how='count').plot()


#### Mi 2013 : un transfert des cadeaux des gynécos vers les généralistes

# In[136]:

avantages[(avantages['BENEF_PS_QUALIFICATION'] == u'Gynécologie')|(avantages['BENEF_PS_QUALIFICATION'] == u'Médecine générale')].groupby(['ORIGIN', 'BENEF_PS_QUALIFICATION'])[['ORIGIN']].resample('BQ', how='count')


# Les dates correspondent à des semestres

### Exploitation des données Biogaram

# In[2]:

#Chargement des données
labo = pd.read_csv("BIOGARAN.anon.csv", encoding='utf-8')
labo = labo[labo.DECL_AVANT_DATE != 'None']
labo = labo.dropna(subset = ['DECL_AVANT_DATE'])
labo = labo[labo.DECL_AVANT_DATE.str.contains(r'^20\d\d-')]
avantages = labo[['DECL_AVANT_DATE','DECL_AVANT_MONTANT', 'BENEF_PS_QUALIFICATION', 'ORIGIN']]
avantages.index = pd.to_datetime(avantages['DECL_AVANT_DATE'])


#### Pas particulièrement plus de cadaeux début 2013

# In[8]:

avantages['DECL_AVANT_MONTANT'].resample('BQ', how='count').plot()


#### Des pharmaciens quasi exclusivement visés

# In[10]:

avantages.groupby(['ORIGIN', 'BENEF_PS_QUALIFICATION'])[['DECL_AVANT_MONTANT']].count()


# Sans doute du à son statut de génériqueur

### Analyse des données concernant les gynécos

# In[2]:

#Chargement des données
gynecos = pd.read_csv("gynecos.anon.csv", encoding='utf-8')
gynecos = gynecos[gynecos.BENEF_PS_QUALIFICATION == u'Gynécologie']
gynecos = gynecos[gynecos.DECL_TYPE == 'AVANTAGE']
gynecos = gynecos[gynecos.DECL_AVANT_DATE.str.contains(r'^20\d\d-')]
gynecos.index = pd.to_datetime(gynecos['DECL_AVANT_DATE'])


#### Nombre de cadeaux entre 2012 et 2014

# In[3]:

gynecos.LABO.count()


#### Le nombre de cadeaux dans le temps

# In[4]:

gynecos['DECL_AVANT_MONTANT'].resample('BQ', how='count').plot()


#### Le détails des investissements par labos

# In[5]:

gynecosParLabos = gynecos[['DECL_AVANT_MONTANT', 'LABO']].groupby('LABO').sum().sort('DECL_AVANT_MONTANT', ascending=False)
gynecosParLabos['count'] = gynecos[['DECL_AVANT_MONTANT', 'LABO']].groupby('LABO').count()
gynecosParLabos['moyenne'] = gynecosParLabos['DECL_AVANT_MONTANT']/gynecosParLabos['count']
gynecosParLabos['porportion_count'] = gynecosParLabos['count'] * 100 / gynecos.LABO.count()
gynecosParLabos['porportion_montant'] = gynecosParLabos['DECL_AVANT_MONTANT'] * 100 / gynecos.DECL_AVANT_MONTANT.sum()
gynecosParLabos


# 30% des cadeaux aux gynécos viennent d'un laboratoire : Theramex SAM

#### Nombre de cadeaux : le pic de 2012 est lié à Theramex SAM

# In[6]:

#Theramex SAM
gynecos[gynecos.LABO == 'Theramex SAM']['DECL_AVANT_MONTANT'].resample('BQ', how='count').plot()


#### Au vu de ce biais, excluons Theramex SAM

# In[7]:

gynecos[gynecos.LABO != 'Theramex SAM']['DECL_AVANT_MONTANT'].resample('BQ', how='count').plot()


#### Les montants investis (hors Theramax) montrent les même tendances

# In[8]:

gynecos[gynecos.LABO != 'Theramex SAM']['DECL_AVANT_MONTANT'].resample('BQ', how='sum').plot()


#### Détails du nombre de cadeaux par labos et semestres

# In[29]:

semestres = gynecos.groupby(['LABO'])[['DECL_AVANT_MONTANT']].resample('BQ', how='count')
semestres[semestres.DECL_AVANT_MONTANT > 100]


# In[ ]:



