$debug = $ENV{'DEBUG'};

%mois = ('jan'=>1,'fev'=>2,'fév'=>2,'feb'=>2,'mar'=>3,'avr'=>4,'apr'=>4,'mai'=>5,'may'=>5,'juin'=>6,'jun'=>6,'juil'=>7, 'jul'=>7,'aug'=>8,'aou'=>8,'aoû'=>8,'sep'=>9,'oct'=>10,'ocot'=>10,'nov'=>11,'dec'=>12,'déc'=>12);

sub printerr($) {
	print ERR shift;
	print ERR "\n";
}

sub printgood($$) {
	$row = shift;
	$head = shift;
	print GOOD $row->[$head->{"LABO"}];
	print GOOD "\t";
        print GOOD $row->[$head->{"PS_NOM"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"PS_PRENOM"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"PS_"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"PS_ADR1"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"PS_ADR2"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"PS_ADR_NUM"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"PS_ADR_COMP"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"PS_VOIE"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"PS_ADR4"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"PS_CP"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"PS_VILLE"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"PS_PAYS"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"PS_QUALIF"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"PS_RPPS"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"CONV_DATE"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"CONV_OBJET"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"CONV_PROGRAMME"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"AVANT_MONTANT"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"AVANT_DATE"}];
        print GOOD "\t";
        print GOOD $row->[$head->{"AVANT_NATURE"}];
	
	print GOOD "\n";
}

sub convdate($) {
	my $decldate = shift;
	$decldate =~ s/1er/01/;
        if ($decldate =~ /\d/ && $decldate =~ /(jan|fev|fév|feb|mar|apr|avr|mai|may|jun|juin|jul|juil|aou|aoû|aug|sep|oco?t|nov|dec|déc)/i) {
                my $hmois = lc($1);
                my $mois = $mois{$hmois};
                $jour = 1;
                if ($mois) { 
                        if ($decldate =~ /(^|\D)(\d{1,2})\D/) {
                                $jour = $2;
                        }
                        $annee = $dyear;
                        if ($decldate =~ /\D(20\d{2}|1[1023]$)/) {
                                $annee = $1;
                                $annee = '20'.$annee if (length($annee) == 2);
                        }
                        if ($annee) {
                                $decldate = sprintf('%04d-%02d-%02d', $annee, $mois, $jour);
                        }
                }
        }elsif ($decldate =~ /^\d{5}$/) {
		my ($sec, $min, $hour, $day,$month,$year) = localtime( ($decldate - 25566) * 86400);
		$year += 1900;
		$decldate = sprintf('%04d-%02d-%02d', $year, $month, $day) ;
	}elsif($decldate =~ /(^|\D)(\d{1,2})\/2?0?(\d{2}) +AU/i) {
		$decldate = sprintf('%04d-%02d-%02d', $dyear, $3, $2);
	}elsif($decldate =~ /(^|\D)(\d{2})\/(\d{2})\/(\d{2})(\D|$)/i) {
                $decldate = sprintf('%04d-%02d-%02d', 2000+$4, $3, $2);
	}elsif($decldate =~ /(^|\D)(\d)\/(\d{1,2})\/(\d{4})/i) {
                $decldate = sprintf('%04d-%02d-%02d', $4, $3, $2);
        }elsif($decldate =~ /(\d{2})\/(\d{2})\/[^2]0([01]\d)/) {
		$decldate = sprintf('%04d-%02d-%02d', 2000+$3, $2, $1);
	}

        if ($decldate =~ /(^|\D)(\d{1,2})\.(\d{2})\.(\d{4})(\D|$)/) {
                $decldate = $4.'-'.$3.'-'.$2;
        }

        if ($decldate =~ /(^|\D)(\d{1,2})\/(\d{2})\/?(\d{4})(\D|$)/) {
                $decldate = $4.'-'.$3.'-'.$2;
        }
        if ($decldate =~ /(^|\D)(\d{2})\-(\d{2})\-(\d{4})(\D|$)/) {
                $decldate = $4.'-'.$3.'-'.$2;
        }
        if ($decldate =~ /(\d{4})\/(\d{2})\/(\d{2})(\D|$)/) {
                $decldate = $1.'-'.$2.'-'.$3;
        }
	if ($decldate eq " " || $decldate eq "NA") {
                $decldate = "";
        }
	return $decldate;
}
our $dyear;
while($file = shift) {
next if ($file =~ /(\.err|\.good)$/);
$dyear = '';
if ($file =~ /(201[23])/) {
	$dyear = $1;
}
my @head; my %head;
print STDERR "analysing $file($dyear)\n";
open(IN, "$file");
open(GOOD, ">$file.good");
open(ERR, ">$file.err");
$head = uc(<IN>);
chomp($head);
$head =~ s/ //g;
$head =~ s/\x00//g;
$head =~ s/BENEF_SPECIALITE/BENEF_PS_SPECIALITE/g;
$head =~ s/BENEF_PS_PRENOM\tBENEF_PS_\t/BENEF_PS_PRENOM\tBENEF_PS_QUALITE\t/;
$head =~ s/BENEF_PS_PAYS\tBENEF_PS_\t/BENEF_PS_PRENOM\tBENEF_PS_QUALIF\t/;
$head =~ s/_QUALIFICATION/_QUALIF/;
$head =~ s/BENEF_//g;
$head =~ s/DECL_//g;
$head =~ s/_ETUD_/_PS_/g;
print $head."\n";
@head = split(/\t/, $head);
$head[0] = 'LABO';
unshift @head, '';
for($i = 0 ; $i <= $#head ; $i++) {
	$head[$i] =~ s/\s//g;
	$head{$head[$i]} = $i;
}
$line = 0;
while (<IN>) {
#	s/\tProfessionnel de Santé\t/\t/;
	s/\xC2\x80//;
	s/\x00//ig;
	$line++;
	my @row;
	chomp;
	s/["\r]//g;
	next unless (/[0-9]/);
	s/\t+$//;
	s/\(vide\)//g;
	@row = split /\t/;
        unshift @row, '';
	for($i = 0 ; $i <= $#head ; $i++) {
        print STDERR "$i: ".$row[$i]."(".$head[$i].")\n" if ($debug);
	}

	my $err = 0;
	if ($#row > $#head) {
		print STDERR "Row too long (last one: ".$row[$#head].":".$row[$#row].")\n";
		$err = 1;
	}
	if ($row[$head{"PS_ADR_NUM"}] =~ '^(NA|-)$') {
		$row[$head{"PS_ADR_NUM"}] = '';
	}
	if ($row[$head{"PS_ADR_NUM"}] && $row[$head{"PS_ADR_NUM"}] !~ /[0-9 ]/) {
		print STDERR "wrong ADRNUMM (".$row[$head{"PS_ADR_NUM"}].")\n";
		$err = 1;
	}
	if ($row[$head{"PS_CP"}] eq 'NC') {
		$row[$head{"PS_CP"}] = '';
        }
	if ($row[$head{"PS_CP"}] && ($row[$head{"PS_CP"}] !~ /[A0-9]/ || $row[$head{"PS_CP"}] =~ /[0-9]{6}/)) {

		print STDERR "wrong cp (".$head{"PS_CP"}.'='.$row[$head{"PS_CP"}].") $file\n";
                $err = 1;
        }
	if ($row[$head{"PS_RPPS"}] =~ /non communiqu[ée]|NC|NON TROUVE|NON IDENTIFIABLE|PAS DISPONIBLE|sans objet|UNK|\?|NON APPLI|-|non concerné|N\.R\.|Néant|AUCUN|pas trouvé|non trouvé|N\/A/i)  {
		$row[$head{"PS_RPPS"}] = '';
	}
        if ($row[$head{"PS_RPPS"}] && $row[$head{"PS_RPPS"}] !~ /[0-9]/) {
		print STDERR "wrong RPPS (".$row[$head{"PS_RPPS"}].")\n";
                $err = 1;
        }
	$row[$head{"PS_RPPS"}] =~ s/[^0-9]//g;
	if ($row[$head{"PS_RPPS"}] !~ /^[0-9]{10}/) {
		$row[$head{"PS_RPPS"}] = '';
	}
        if ($row[$head{"PS_SPECIALITE"}] && !$row[$head{"PS_QUALIF"}]) {
		$row[$head{"PS_QUALIF"}] = $row[$head{"PS_SPECIALITE"}];
	}
	$AVANT_DATE = convdate($row[$head{"AVANT_DATE"}]);
	$CONV_DATE = convdate($row[$head{"CONV_DATE"}]);
	if (!$head{"AVANT_DATE"}) {
		$AVANT_DATE = convdate($row[$head{'AVANT_NATURE'}]);
	}
	if ($CONV_DATE && $CONV_DATE =~ /N\/A/) {
		$CONV_DATE = '';
	}
        if ($CONV_DATE && !($CONV_DATE =~ /20(\d{2})\-\d{2}\-\d{2}/ && $1 < 14)) {
                print STDERR "wrong CONV DATE (".$row[$head{"CONV_DATE"}].")\n";
                $err = 1;
        }
        if ($AVANT_DATE && !($AVANT_DATE =~ /20(\d{2})\-\d{2}\-\d{2}/ && $1 < 14)) {
		print STDERR "wrong AVANT DATE(".$row[$head{"AVANT_DATE"}].") $file\n";
                $err = 1;
        }
	$AVANT_MONTANT = $row[$head{"AVANT_MONTANT"}];
	if ($AVANT_MONTANT && $AVANT_MONTANT =~ /\d/) {
		if ($AVANT_MONTANT =~ s/\$//) {
			$AVANT_MONTANT =~ s/[^0-9\.,]//g;
			$AVANT_MONTANT *= 1.3;
		}
        	$AVANT_MONTANT =~ s/[^0-9\.,]//g;
	        $AVANT_MONTANT =~ s/,/./g;
	}elsif ($AVANT_MONTANT eq 'NA') {
		$AVANT_MONTANT = '';
	}
        if ($AVANT_MONTANT && ($AVANT_MONTANT !~ /[\d+\.]/ || $AVANT_MONTANT =~ /^\d{6}/)) {
		print STDERR "wrong AVANT MONTANT (".$row[$head{"AVANT_MONTANT"}].")\n";
                $err = 1;
        }

	unless (($AVANT_DATE && $AVANT_MONTANT) || $CONV_DATE) {
		print STDERR "Rien sur les avantages ou les conventions (montant:".$row[$head{"AVANT_MONTANT"}]."(".$head{"AVANT_MONTANT"}.") avant date: ".$row[$head{"AVANT_DATE"}]."(".$head{"AVANT_DATE"}.") conv date:".$row[$head{"CONV_DATE"}]."(".$head{"AVANT_DATE"}.")\n";
		$err = 1;
	}

	$row[$head{"AVANT_MONTANT"}] = $AVANT_MONTANT;
	$row[$head{"AVANT_DATE"}] = $AVANT_DATE;
	$row[$head{"CONV_DATE"}] = $CONV_DATE;

	if ($err) {
		printerr($_);
	}else{
		printgood(\@row, \%head);
	}
	exit if ($debug);
}
}
